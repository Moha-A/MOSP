{"ast":null,"code":"import _regeneratorRuntime from \"/Users/401821/2_web/1_website/MOSP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/401821/2_web/1_website/MOSP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { user, UrlHead } from \"./Url\";\nimport { getLoginDataFromLocalStorage } from \"../middleware/Storage\";\nimport auth from \"../middleware/router/auth.route\"; //GET Products\n\nexport var getProductDetails =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(product) {\n    var paxId, embarkationDate, disembarkationDate, bookingNumber, productCode, url, data, items;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!auth.isAuthenticated()) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.prev = 1;\n            paxId = getLoginDataFromLocalStorage().paxId;\n            embarkationDate = getLoginDataFromLocalStorage().embarkationDate;\n            disembarkationDate = getLoginDataFromLocalStorage().disembarkationDate;\n            bookingNumber = getLoginDataFromLocalStorage().bookingNumber;\n            productCode = product;\n\n            if (!productCode) {\n              productCode = \"mvp01\";\n            }\n\n            url = \"\".concat(UrlHead, \"/getProductDetails?paxId=\").concat(paxId, \"&embarkationDate=\").concat(embarkationDate, \"&disembarkationDate=\").concat(disembarkationDate, \"&bookingNumber=\").concat(bookingNumber, \"&productCode=\").concat(productCode);\n            _context.next = 11;\n            return fetch(url, {\n              headers: {\n                Authorization: \"Basic \" + btoa(user)\n              }\n            });\n\n          case 11:\n            data = _context.sent;\n            _context.next = 14;\n            return data.json();\n\n          case 14:\n            items = _context.sent;\n            return _context.abrupt(\"return\", items);\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 18]]);\n  }));\n\n  return function getProductDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //POST Requests\n\nexport var postProductReservations =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(data, Status) {\n    var paxId, embarkationDate, disembarkationDate, bookingNumber, productCode, allData, url;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!auth.isAuthenticated()) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.prev = 1;\n            paxId = getLoginDataFromLocalStorage().paxId;\n            embarkationDate = getLoginDataFromLocalStorage().embarkationDate;\n            disembarkationDate = getLoginDataFromLocalStorage().disembarkationDate;\n            bookingNumber = getLoginDataFromLocalStorage().bookingNumber;\n            productCode = data.productCode;\n\n            if (!productCode) {\n              productCode = \"mvp01\";\n            }\n\n            allData = JSON.stringify({\n              paxId: paxId,\n              embarkationDate: embarkationDate,\n              disembarkationDate: disembarkationDate,\n              bookingNumber: bookingNumber,\n              price: data,\n              productCode: productCode\n            });\n            url = \"\".concat(UrlHead, \"/checkoutArticles\");\n            fetch(url, {\n              method: \"post\",\n              headers: {\n                Authorization: \"Basic \" + btoa(user),\n                \"content-type\": \"application/json\"\n              },\n              body: allData\n            }).then(function (res) {\n              if (res.ok) {\n                Status(true);\n              } else {\n                Status(false);\n              }\n            });\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 13]]);\n  }));\n\n  return function postProductReservations(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/401821/2_web/1_website/MOSP/src/API/productDetails.API.js"],"names":["user","UrlHead","getLoginDataFromLocalStorage","auth","getProductDetails","product","isAuthenticated","paxId","embarkationDate","disembarkationDate","bookingNumber","productCode","url","fetch","headers","Authorization","btoa","data","json","items","postProductReservations","Status","allData","JSON","stringify","price","method","body","then","res","ok"],"mappings":"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","sourcesContent":["import { user, UrlHead } from \"./Url\";\nimport { getLoginDataFromLocalStorage } from \"../middleware/Storage\";\nimport auth from \"../middleware/router/auth.route\";\n\n//GET Products\nexport const getProductDetails = async product => {\n  if (auth.isAuthenticated()) {\n    try {\n      let paxId = getLoginDataFromLocalStorage().paxId;\n      let embarkationDate = getLoginDataFromLocalStorage().embarkationDate;\n      let disembarkationDate = getLoginDataFromLocalStorage()\n        .disembarkationDate;\n      let bookingNumber = getLoginDataFromLocalStorage().bookingNumber;\n      let productCode = product;\n      if (!productCode) {\n        productCode = \"mvp01\";\n      }\n\n      let url = `${UrlHead}/getProductDetails?paxId=${paxId}&embarkationDate=${embarkationDate}&disembarkationDate=${disembarkationDate}&bookingNumber=${bookingNumber}&productCode=${productCode}`;\n\n      const data = await fetch(url, {\n        headers: {\n          Authorization: \"Basic \" + btoa(user)\n        }\n      });\n      const items = await data.json();\n\n      return items;\n    } catch (error) {\n      return error;\n    }\n  }\n};\n\n//POST Requests\nexport const postProductReservations = async (data, Status) => {\n  if (auth.isAuthenticated()) {\n    try {\n      let paxId = getLoginDataFromLocalStorage().paxId;\n      let embarkationDate = getLoginDataFromLocalStorage().embarkationDate;\n      let disembarkationDate = getLoginDataFromLocalStorage()\n        .disembarkationDate;\n      let bookingNumber = getLoginDataFromLocalStorage().bookingNumber;\n      let productCode = data.productCode;\n      if (!productCode) {\n        productCode = \"mvp01\";\n      }\n\n      const allData = JSON.stringify({\n        paxId: paxId,\n        embarkationDate: embarkationDate,\n        disembarkationDate: disembarkationDate,\n        bookingNumber: bookingNumber,\n        price: data,\n        productCode: productCode\n      });\n\n      let url = `${UrlHead}/checkoutArticles`;\n\n      fetch(url, {\n        method: \"post\",\n        headers: {\n          Authorization: \"Basic \" + btoa(user),\n          \"content-type\": \"application/json\"\n        },\n        body: allData\n      }).then(res => {\n        if (res.ok) {\n          Status(true);\n        } else {\n          Status(false);\n        }\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}