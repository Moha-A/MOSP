{"ast":null,"code":"var _jsxFileName = \"/Users/401821/2_web/1_website/MOSP/src/componente/pageElements/buyProduct/selectPrice/ProductOptions.js\";\nimport React, { Fragment } from \"react\";\nimport ArrowLeft from \"../../../../media/svg/icons/ArrowLeft\";\nimport { Link } from \"react-router-dom\";\n\nvar ProductOptions = function ProductOptions(_ref) {\n  var currencyCode = _ref.currencyCode,\n      prices = _ref.prices,\n      selectedPrice = _ref.selectedPrice,\n      bookable = _ref.bookable,\n      changeSelectedPrice = _ref.changeSelectedPrice,\n      nextStep = _ref.nextStep;\n\n  if (bookable) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"productOptionsContener\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"productOptions \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, prices ? prices.map(function (price) {\n      return React.createElement(\"label\", {\n        className: \"optionButton \" + (selectedPrice === price.priceFrom ? \"selectedLabel\" : \"\"),\n        onClick: function onClick() {\n          changeSelectedPrice(price.priceFrom);\n        },\n        htmlFor: price.priceFrom,\n        key: price.priceFrom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, price.priceFrom, \" \", currencyCode === \"EUR\" ? \"€\" : currencyCode, React.createElement(\"input\", {\n        className: \"optionInput \",\n        type: \"radio\",\n        name: \"donationValue\",\n        value: price.priceFrom,\n        defaultChecked: selectedPrice === price.priceFrom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }) : \"Ein Fehler aufgetreten\", React.createElement(\"button\", {\n      className: \"orderButton mt2 \" + (selectedPrice === 0 ? \"orderButtonDisabled\" : \"\"),\n      type: \"submit\",\n      disabled: selectedPrice === 0 ? true : false,\n      onClick: function onClick() {\n        nextStep();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"RESERVIEREN\"), React.createElement(Link, {\n      to: \"/overview\",\n      className: \"overviewLink mt4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\xDCbersicht & Kauf-Historie\"), \" \", React.createElement(ArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"productOptionsContener2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" ProductTextcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"textCenter fontL fontDarkBlue mt12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Der Artikel ist momentan nicht verf\\xFCgbar!\"))));\n  }\n};\n\nexport default ProductOptions;","map":{"version":3,"sources":["/Users/401821/2_web/1_website/MOSP/src/componente/pageElements/buyProduct/selectPrice/ProductOptions.js"],"names":["React","Fragment","ArrowLeft","Link","ProductOptions","currencyCode","prices","selectedPrice","bookable","changeSelectedPrice","nextStep","map","price","priceFrom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,uCAAtB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOjB;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAIF,QAAJ,EAAc;AACZ,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,GACHA,MAAM,CAACK,GAAP,CAAW,UAAAC,KAAK,EAAI;AAClB,aACE;AACE,QAAA,SAAS,EACP,mBACCL,aAAa,KAAKK,KAAK,CAACC,SAAxB,GACG,eADH,GAEG,EAHJ,CAFJ;AAOE,QAAA,OAAO,EAAE,mBAAM;AACbJ,UAAAA,mBAAmB,CAACG,KAAK,CAACC,SAAP,CAAnB;AACD,SATH;AAUE,QAAA,OAAO,EAAED,KAAK,CAACC,SAVjB;AAWE,QAAA,GAAG,EAAED,KAAK,CAACC,SAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaGD,KAAK,CAACC,SAbT,EAaoB,GAbpB,EAcGR,YAAY,KAAK,KAAjB,GAAyB,GAAzB,GAA+BA,YAdlC,EAeE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,eAHP;AAIE,QAAA,KAAK,EAAEO,KAAK,CAACC,SAJf;AAKE,QAAA,cAAc,EAAEN,aAAa,KAAKK,KAAK,CAACC,SAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,CADF;AAyBD,KA1BD,CADG,GA4BH,wBA7BN,EA+BE;AACE,MAAA,SAAS,EACP,sBACCN,aAAa,KAAK,CAAlB,GAAsB,qBAAtB,GAA8C,EAD/C,CAFJ;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,QAAQ,EAAEA,aAAa,KAAK,CAAlB,GAAsB,IAAtB,GAA6B,KANzC;AAOE,MAAA,OAAO,EAAE,mBAAM;AACbG,QAAAA,QAAQ;AACT,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA/BF,EA6CE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAAV;AAAuB,MAAA,SAAS,EAAC,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,OAC6C,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7C,CA7CF,CADF,CADF,CADF;AAuDD,GAxDD,MAwDO;AACL,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,CADF,CADF,CADF;AAWD;AACF,CA7ED;;AA+EA,eAAeN,cAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport ArrowLeft from \"../../../../media/svg/icons/ArrowLeft\";\n\nimport { Link } from \"react-router-dom\";\n\nconst ProductOptions = ({\n  currencyCode,\n  prices,\n  selectedPrice,\n  bookable,\n  changeSelectedPrice,\n  nextStep\n}) => {\n  if (bookable) {\n    return (\n      <Fragment>\n        <div className=\"productOptionsContener\">\n          <div className=\"productOptions \">\n            {prices\n              ? prices.map(price => {\n                  return (\n                    <label\n                      className={\n                        \"optionButton \" +\n                        (selectedPrice === price.priceFrom\n                          ? \"selectedLabel\"\n                          : \"\")\n                      }\n                      onClick={() => {\n                        changeSelectedPrice(price.priceFrom);\n                      }}\n                      htmlFor={price.priceFrom}\n                      key={price.priceFrom}\n                    >\n                      {price.priceFrom}{\" \"}\n                      {currencyCode === \"EUR\" ? \"€\" : currencyCode}\n                      <input\n                        className=\"optionInput \"\n                        type=\"radio\"\n                        name=\"donationValue\"\n                        value={price.priceFrom}\n                        defaultChecked={selectedPrice === price.priceFrom}\n                      />\n                    </label>\n                  );\n                })\n              : \"Ein Fehler aufgetreten\"}\n\n            <button\n              className={\n                \"orderButton mt2 \" +\n                (selectedPrice === 0 ? \"orderButtonDisabled\" : \"\")\n              }\n              type=\"submit\"\n              disabled={selectedPrice === 0 ? true : false}\n              onClick={() => {\n                nextStep();\n              }}\n            >\n              RESERVIEREN\n            </button>\n\n            <Link to={\"/overview\"} className=\"overviewLink mt4\">\n              <span>Übersicht &amp; Kauf-Historie</span> <ArrowLeft />\n            </Link>\n          </div>\n        </div>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <div className=\"productOptionsContener2\">\n          <div className=\" ProductTextcontainer\">\n            <p className=\"textCenter fontL fontDarkBlue mt12\">\n              Der Artikel ist momentan nicht verfügbar!\n            </p>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n};\n\nexport default ProductOptions;\n"]},"metadata":{},"sourceType":"module"}