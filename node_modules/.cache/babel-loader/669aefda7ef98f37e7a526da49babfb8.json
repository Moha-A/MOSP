{"ast":null,"code":"import _regeneratorRuntime from \"/Users/401821/2_web/1_website/MOSP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/401821/2_web/1_website/MOSP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var UrlHead;\nexport var user;\n\nswitch (window.location.host) {\n  case \"novatest-mospmvp.aida.de:8080\":\n  case \"novatest-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.novatest-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n\n  case \"nova-mospmvp.aida.de:8080\":\n  case \"nova-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.mospmvp.nova.aida.de/api\";\n    user = \"mosp_dbd_prod:pOM!Tasnz?cVoU5lC+8G\";\n    break;\n\n  case \"test-mospmvp.aida.de:8080\":\n  case \"test-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.test-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n\n  case \"mospmvp.aida.de:8080\":\n  case \"mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.mospmvp.aida.de/api\";\n    user = \"mosp_dbd_prod:pOM!Tasnz?cVoU5lC+8G\";\n    break;\n\n  default:\n    UrlHead = \"https://api.test-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n}\n\nexport var isGoodApi =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var data, items;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(url, {\n              headers: {\n                Authorization: \"Basic \" + btoa(user)\n              }\n            });\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return data.json();\n\n          case 6:\n            items = _context.sent;\n            return _context.abrupt(\"return\", items);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function isGoodApi(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var isGoodUrl = function isGoodUrl(paxId, embarkationDate, disembarkationDate, bookingNumber) {\n  var url = \"\".concat(UrlHead, \"/getProductDetails?paxId=\").concat(paxId, \"&embarkationDate=\").concat(embarkationDate, \"&disembarkationDate=\").concat(disembarkationDate, \"&bookingNumber=\").concat(bookingNumber, \"&productCode=mvp01\");\n  return isGoodApi(url);\n};","map":{"version":3,"sources":["/Users/401821/2_web/1_website/MOSP/src/API/Url.js"],"names":["UrlHead","user","window","location","host","isGoodApi","url","fetch","headers","Authorization","btoa","data","json","items","isGoodUrl","paxId","embarkationDate","disembarkationDate","bookingNumber"],"mappings":";;AAAA,OAAO,IAAIA,OAAJ;AACP,OAAO,IAAIC,IAAJ;;AAEP,QAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB;AACE,OAAK,+BAAL;AACA,OAAK,+BAAL;AACEJ,IAAAA,OAAO,GAAG,0CAAV;AACAC,IAAAA,IAAI,GAAG,iBAAP;AACA;;AACF,OAAK,2BAAL;AACA,OAAK,2BAAL;AACED,IAAAA,OAAO,GAAG,sCAAV;AACAC,IAAAA,IAAI,GAAG,oCAAP;AACA;;AACF,OAAK,2BAAL;AACA,OAAK,2BAAL;AACED,IAAAA,OAAO,GAAG,sCAAV;AACAC,IAAAA,IAAI,GAAG,iBAAP;AACA;;AACF,OAAK,sBAAL;AACA,OAAK,sBAAL;AACED,IAAAA,OAAO,GAAG,iCAAV;AACAC,IAAAA,IAAI,GAAG,oCAAP;AACA;;AACF;AACED,IAAAA,OAAO,GAAG,sCAAV;AACAC,IAAAA,IAAI,GAAG,iBAAP;AACA;AAxBJ;;AA2BA,OAAO,IAAMI,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFC,KAAK,CAACD,GAAD,EAAM;AAC5BE,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,EAAE,WAAWC,IAAI,CAACT,IAAD;AADvB;AADmB,aAAN,CAFH;;AAAA;AAEfU,YAAAA,IAFe;AAAA;AAAA,mBAODA,IAAI,CAACC,IAAL,EAPC;;AAAA;AAOfC,YAAAA,KAPe;AAAA,6CASdA,KATc;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATR,SAAS;AAAA;AAAA;AAAA,GAAf;AAeP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CACvBC,KADuB,EAEvBC,eAFuB,EAGvBC,kBAHuB,EAIvBC,aAJuB,EAKpB;AACH,MAAIZ,GAAG,aAAMN,OAAN,sCAAyCe,KAAzC,8BAAkEC,eAAlE,iCAAwGC,kBAAxG,4BAA4IC,aAA5I,uBAAP;AAEA,SAAOb,SAAS,CAACC,GAAD,CAAhB;AACD,CATM","sourcesContent":["export let UrlHead;\nexport let user;\n\nswitch (window.location.host) {\n  case \"novatest-mospmvp.aida.de:8080\":\n  case \"novatest-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.novatest-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n  case \"nova-mospmvp.aida.de:8080\":\n  case \"nova-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.mospmvp.nova.aida.de/api\";\n    user = \"mosp_dbd_prod:pOM!Tasnz?cVoU5lC+8G\";\n    break;\n  case \"test-mospmvp.aida.de:8080\":\n  case \"test-mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.test-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n  case \"mospmvp.aida.de:8080\":\n  case \"mospmvp.aida.de:9000\":\n    UrlHead = \"https://api.mospmvp.aida.de/api\";\n    user = \"mosp_dbd_prod:pOM!Tasnz?cVoU5lC+8G\";\n    break;\n  default:\n    UrlHead = \"https://api.test-mospmvp.aida.de/api\";\n    user = \"user001:001user\";\n    break;\n}\n\nexport const isGoodApi = async url => {\n  try {\n    const data = await fetch(url, {\n      headers: {\n        Authorization: \"Basic \" + btoa(user)\n      }\n    });\n    const items = await data.json();\n\n    return items;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const isGoodUrl = (\n  paxId,\n  embarkationDate,\n  disembarkationDate,\n  bookingNumber\n) => {\n  let url = `${UrlHead}/getProductDetails?paxId=${paxId}&embarkationDate=${embarkationDate}&disembarkationDate=${disembarkationDate}&bookingNumber=${bookingNumber}&productCode=mvp01`;\n\n  return isGoodApi(url);\n};\n"]},"metadata":{},"sourceType":"module"}