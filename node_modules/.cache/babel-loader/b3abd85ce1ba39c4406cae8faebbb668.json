{"ast":null,"code":"import { isGoodUrl } from \"../API/Url\";\nimport { setToLocalStorage, setLoginDataToLocalStorage } from \"./Storage\";\nexport var getLoginData = function getLoginData(paxId, embarkationDate, disembarkationDate, bookingNumber) {\n  var next = isGoodUrl(paxId, embarkationDate, disembarkationDate, bookingNumber).then(function (data) {\n    // && data.availableSlotsCount > 0\n    if (data.bookable !== undefined) {\n      setLoginDataToLocalStorage(paxId, embarkationDate, disembarkationDate, bookingNumber);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  return next;\n};\nexport var isValidLoginData = function isValidLoginData(paxId, embarkationDate, disembarkationDate, bookingNumber) {\n  if (isAllValidOk(paxId, embarkationDate, disembarkationDate, bookingNumber)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport var isAllValidOk = function isAllValidOk(paxId, embarkationDate, disembarkationDate, bookingNumber) {\n  var okPaxID = isNumeric(paxId);\n  var okEmbarkationDate = isValidDate(embarkationDate);\n  var okDisembarkationDate = isValidDate(disembarkationDate);\n  var okBookingNumber = isNumeric(bookingNumber);\n\n  if (okPaxID && okEmbarkationDate && okDisembarkationDate && okBookingNumber) {\n    setToLocalStorage(okPaxID, okEmbarkationDate, okDisembarkationDate, okBookingNumber);\n    return true;\n  } else {\n    return false;\n  }\n};\nexport var isValidNummber = function isValidNummber(num) {\n  if (typeof num == \"number\") {\n    return num;\n  }\n};\n\nvar isNumeric = function isNumeric(num) {\n  if (!isNaN(num)) {\n    return num;\n  }\n};\n\nexport var isValidDate = function isValidDate(s) {\n  var mydate = s;\n\n  if (typeof mydate == \"object\") {\n    var curr_date = mydate.getDate();\n    var curr_date_to_string = curr_date.toString();\n\n    switch (curr_date_to_string) {\n      case \"1\":\n        curr_date_to_string = \"01\";\n        break;\n\n      case \"2\":\n        curr_date_to_string = \"02\";\n        break;\n\n      case \"3\":\n        curr_date_to_string = \"03\";\n        break;\n\n      case \"4\":\n        curr_date_to_string = \"04\";\n        break;\n\n      case \"5\":\n        curr_date_to_string = \"05\";\n        break;\n\n      case \"6\":\n        curr_date_to_string = \"06\";\n        break;\n\n      case \"7\":\n        curr_date_to_string = \"07\";\n        break;\n\n      case \"8\":\n        curr_date_to_string = \"08\";\n        break;\n\n      case \"9\":\n      default:\n        curr_date_to_string = \"09\";\n        break;\n    }\n\n    var curr_month = mydate.getMonth();\n    var curr_month_plus = Number(curr_month) + 1;\n    var curr_month_to_string = curr_month_plus.toString();\n\n    switch (curr_month_to_string) {\n      case \"1\":\n        curr_month_to_string = \"01\";\n        break;\n\n      case \"2\":\n        curr_month_to_string = \"02\";\n        break;\n\n      case \"3\":\n        curr_month_to_string = \"03\";\n        break;\n\n      case \"4\":\n        curr_month_to_string = \"04\";\n        break;\n\n      case \"5\":\n        curr_month_to_string = \"05\";\n        break;\n\n      case \"6\":\n        curr_month_to_string = \"06\";\n        break;\n\n      case \"7\":\n        curr_month_to_string = \"07\";\n        break;\n\n      case \"8\":\n        curr_month_to_string = \"08\";\n        break;\n\n      case \"9\":\n      default:\n        curr_month_to_string = \"09\";\n        break;\n    }\n\n    var curr_year = mydate.getFullYear();\n    var mydatestr = curr_year + \"-\" + curr_month_to_string + \"-\" + curr_date_to_string;\n    var date = dateToArray(mydatestr);\n    return date;\n  } else {\n    var _mydatestr = dateToArray(mydate);\n\n    var _curr_year = isNumeric(_mydatestr[0]);\n\n    var _curr_month = isNumeric(_mydatestr[1]);\n\n    var _curr_date = isNumeric(_mydatestr[2]);\n\n    var myFullDate = _curr_year + \"-\" + _curr_month + \"-\" + _curr_date;\n    return myFullDate;\n  }\n};\n\nvar dateToArray = function dateToArray(data) {\n  if (data.includes(\"/\")) {\n    var dataArray = data.split(\"/\");\n    var m = dataArray[0];\n    var d = dataArray[1];\n    var y = dataArray[2];\n    var englischData = [y, m, d];\n    return englischData;\n  }\n\n  if (data.includes(\"-\")) {\n    return data.split(\"-\");\n  }\n\n  if (data.includes(\".\")) {\n    return data.split(\".\");\n  }\n};","map":{"version":3,"sources":["/Users/401821/2_web/1_website/MOSP/src/middleware/Validation.js"],"names":["isGoodUrl","setToLocalStorage","setLoginDataToLocalStorage","getLoginData","paxId","embarkationDate","disembarkationDate","bookingNumber","next","then","data","bookable","undefined","isValidLoginData","isAllValidOk","okPaxID","isNumeric","okEmbarkationDate","isValidDate","okDisembarkationDate","okBookingNumber","isValidNummber","num","isNaN","s","mydate","curr_date","getDate","curr_date_to_string","toString","curr_month","getMonth","curr_month_plus","Number","curr_month_to_string","curr_year","getFullYear","mydatestr","date","dateToArray","myFullDate","includes","dataArray","split","m","d","y","englischData"],"mappings":"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","sourcesContent":["import { isGoodUrl } from \"../API/Url\";\n\nimport { setToLocalStorage, setLoginDataToLocalStorage } from \"./Storage\";\n\nexport const getLoginData = (\n  paxId,\n  embarkationDate,\n  disembarkationDate,\n  bookingNumber\n) => {\n  let next = isGoodUrl(\n    paxId,\n    embarkationDate,\n    disembarkationDate,\n    bookingNumber\n  ).then(data => {\n    // && data.availableSlotsCount > 0\n    if (data.bookable !== undefined) {\n      setLoginDataToLocalStorage(\n        paxId,\n        embarkationDate,\n        disembarkationDate,\n        bookingNumber\n      );\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  return next;\n};\n\nexport const isValidLoginData = (\n  paxId,\n  embarkationDate,\n  disembarkationDate,\n  bookingNumber\n) => {\n  if (isAllValidOk(paxId, embarkationDate, disembarkationDate, bookingNumber)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const isAllValidOk = (\n  paxId,\n  embarkationDate,\n  disembarkationDate,\n  bookingNumber\n) => {\n  let okPaxID = isNumeric(paxId);\n  let okEmbarkationDate = isValidDate(embarkationDate);\n  let okDisembarkationDate = isValidDate(disembarkationDate);\n  let okBookingNumber = isNumeric(bookingNumber);\n  if (okPaxID && okEmbarkationDate && okDisembarkationDate && okBookingNumber) {\n    setToLocalStorage(\n      okPaxID,\n      okEmbarkationDate,\n      okDisembarkationDate,\n      okBookingNumber\n    );\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const isValidNummber = num => {\n  if (typeof num == \"number\") {\n    return num;\n  }\n};\n\nconst isNumeric = num => {\n  if (!isNaN(num)) {\n    return num;\n  }\n};\n\nexport const isValidDate = s => {\n  let mydate = s;\n\n  if (typeof mydate == \"object\") {\n    let curr_date = mydate.getDate();\n    let curr_date_to_string = curr_date.toString();\n\n    switch (curr_date_to_string) {\n      case \"1\":\n        curr_date_to_string = \"01\";\n        break;\n      case \"2\":\n        curr_date_to_string = \"02\";\n        break;\n      case \"3\":\n        curr_date_to_string = \"03\";\n        break;\n      case \"4\":\n        curr_date_to_string = \"04\";\n        break;\n      case \"5\":\n        curr_date_to_string = \"05\";\n        break;\n      case \"6\":\n        curr_date_to_string = \"06\";\n        break;\n      case \"7\":\n        curr_date_to_string = \"07\";\n        break;\n      case \"8\":\n        curr_date_to_string = \"08\";\n        break;\n      case \"9\":\n      default:\n        curr_date_to_string = \"09\";\n        break;\n    }\n\n    let curr_month = mydate.getMonth();\n    let curr_month_plus = Number(curr_month) + 1;\n    let curr_month_to_string = curr_month_plus.toString();\n    switch (curr_month_to_string) {\n      case \"1\":\n        curr_month_to_string = \"01\";\n        break;\n      case \"2\":\n        curr_month_to_string = \"02\";\n        break;\n      case \"3\":\n        curr_month_to_string = \"03\";\n        break;\n      case \"4\":\n        curr_month_to_string = \"04\";\n        break;\n      case \"5\":\n        curr_month_to_string = \"05\";\n        break;\n      case \"6\":\n        curr_month_to_string = \"06\";\n        break;\n      case \"7\":\n        curr_month_to_string = \"07\";\n        break;\n      case \"8\":\n        curr_month_to_string = \"08\";\n        break;\n      case \"9\":\n      default:\n        curr_month_to_string = \"09\";\n        break;\n    }\n\n    let curr_year = mydate.getFullYear();\n\n    let mydatestr =\n      curr_year + \"-\" + curr_month_to_string + \"-\" + curr_date_to_string;\n\n    const date = dateToArray(mydatestr);\n    return date;\n  } else {\n    let mydatestr = dateToArray(mydate);\n    let curr_year = isNumeric(mydatestr[0]);\n    let curr_month = isNumeric(mydatestr[1]);\n    let curr_date = isNumeric(mydatestr[2]);\n    let myFullDate = curr_year + \"-\" + curr_month + \"-\" + curr_date;\n\n    return myFullDate;\n  }\n};\n\nconst dateToArray = data => {\n  if (data.includes(\"/\")) {\n    let dataArray = data.split(\"/\");\n    let m = dataArray[0];\n    let d = dataArray[1];\n    let y = dataArray[2];\n    let englischData = [y, m, d];\n    return englischData;\n  }\n  if (data.includes(\"-\")) {\n    return data.split(\"-\");\n  }\n  if (data.includes(\".\")) {\n    return data.split(\".\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}